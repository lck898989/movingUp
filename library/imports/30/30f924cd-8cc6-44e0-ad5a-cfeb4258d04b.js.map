{"version":3,"sources":["../../../../../assets/Script/users/assets/Script/users/User.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/Script/users","sourcesContent":["// Learn TypeScript:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\ninterface BestRecore {\n    level: number,\n    time: string\n}\n@ccclass\nexport default class User extends cc.Component {\n    // 当前玩家所在的关卡\n    private level: number = 1;\n    // 当前玩家的最好成绩记录\n    private bestRecord: BestRecore[] = [{level: 1,time: \"00:00\"}];\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n\n    }\n    public setBestRecord(level: number,time: string): void {\n        // this.bestRecord.level = level;\n        // this.level = level;\n        // this.bestRecord.time = time;\n        if(level >= 1 && !this.bestRecord[level - 1]) {\n            // 新加记录\n            this.bestRecord.push({level: level,time: time});\n        } else {\n            if(this.bestRecord[level - 1].level === level) {\n                // 更新记录（如果新传递进来的时间大于记录的时间不用更新否则更新）\n                let curTimeString = this.bestRecord[level - 1].time;\n                if(curTimeString === \"00:00\") {\n                    // 还没有最好成绩直接存储最后成绩\n                    this.bestRecord[level - 1].time = time;\n                    // 存储到计算机中去\n                    // cc.sys.localStorage.setItem();\n                } else {\n                    // 有最好成绩检查是否替换最好成绩\n                    if(this.convertTimeStringToNumber(curTimeString) > this.convertTimeStringToNumber(time)) {\n                        // 更新\n                        this.bestRecord[level - 1].time = time;\n                    } \n                }\n            }\n        }\n        cc.sys.localStorage.setItem(\"my\",JSON.stringify(this.bestRecord));\n    }\n    // 将字符串类型的时间转换为数字以便进行比较\n    private convertTimeStringToNumber(timestring: string): number {\n        let res: number = 0;\n        let stringArr: string[] = timestring.split(\":\");\n        let minutes: number = Number(stringArr[0]);\n        let seconds: number = Number(stringArr[1]);\n        res = minutes * 60 + seconds;\n        return res;\n\n    }\n    public getBestRecord(level: number): BestRecore {\n        let res: BestRecore[];\n        if(!cc.sys.localStorage.getItem(\"my\")) {\n            res = null;\n        } else {\n            res = <BestRecore[]>JSON.parse(cc.sys.localStorage.getItem(\"my\"));\n        }\n        for(let i = 0; i < res.length; i++) {\n            if(this.bestRecord[i].level === level) {\n                return this.bestRecord[i];\n            }\n        }\n    }\n    public setLevel(level: number): void {\n        this.level = level;\n    }\n    public getLevel(): number {\n        return this.level;\n    }\n    start () {\n\n    }\n\n    // update (dt) {}\n}\n"]}