{"version":3,"sources":["../../../../../assets/Script/users/assets/Script/users/User.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/Script/users","sourcesContent":["const {ccclass, property} = cc._decorator;\ninterface BestRecore {\n    level: number,\n    time: string\n}\n@ccclass\nexport default class User extends cc.Component {\n    // 当前玩家所在的关卡\n    private level: number = 1;\n    // 当前玩家的最好成绩记录\n    private bestRecord: BestRecore[] = [{level: 1,time: \"00:00\"}];\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        \n    }\n    public setBestRecord(level: number,time: string): void {\n        let localDataString: any = cc.sys.localStorage.getItem(\"my\");\n        let localData: BestRecore[];\n        // 取出游戏记录\n        if(localDataString && localDataString !== \"\" && localDataString !== \"undefined\") {\n            localData = <BestRecore[]>JSON.parse(localDataString);\n        } else {\n            let firstData: BestRecore[] = [];\n            firstData.push({level: level,time: time});\n            // 创建一个记录\n            cc.sys.localStorage.setItem(\"my\",JSON.stringify(firstData));\n        }\n        if(level > 1 && localData && localData.length > 0 && !localData[level - 1]) {\n            // 新加记录\n            // this.bestRecord.push({level: level,time: time});\n            localData.push({level,time});\n            cc.sys.localStorage.setItem(\"my\",JSON.stringify(localData));\n        } else {\n            if(level >= 1 && localData.length > 0 && localData[level - 1].level === level) {\n                // 更新记录（如果新传递进来的时间大于记录的时间不用更新否则更新）\n                let curTimeString = localData[level - 1].time;\n                if(curTimeString === \"00:00\") {\n                    // 还没有最好成绩直接存储最后成绩\n                    localData[level - 1].time = time;\n                } else {\n                    // 有最好成绩检查是否替换最好成绩\n                    if(this.convertTimeStringToNumber(curTimeString) > this.convertTimeStringToNumber(time)) {\n                        // 更新\n                        localData[level - 1].time = time;\n                    } \n                }\n            }\n            cc.sys.localStorage.setItem(\"my\",JSON.stringify(localData));\n        }\n        \n    }\n    // 将字符串类型的时间转换为数字以便进行比较\n    private convertTimeStringToNumber(timestring: string): number {\n        let res: number = 0;\n        let stringArr: string[] = timestring.split(\":\");\n        let minutes: number = Number(stringArr[0]);\n        let seconds: number = Number(stringArr[1]);\n        res = minutes * 60 + seconds;\n        return res;\n\n    }\n    public getBestRecord(level: number): BestRecore {\n        let res: BestRecore[];\n        if(cc.sys.localStorage.getItem(\"my\") === \"undefined\" || !cc.sys.localStorage.getItem(\"my\")) {\n            res = null;\n            return null;\n        } else {\n            res = <BestRecore[]>JSON.parse(cc.sys.localStorage.getItem(\"my\"));\n            for(let i = 0; i < res.length; i++) {\n                if(res[i].level === level) {\n                    return res[i];\n                }\n            }\n        }\n    }\n    public setLevel(level: number): void {\n        this.level = level;\n    }\n    public getLevel(): number {\n        return this.level;\n    }\n    start () {\n\n    }\n\n    // update (dt) {}\n}\n"]}