{"version":3,"sources":["../../../../../assets/Script/managers/assets/Script/managers/AudioManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/Script/managers","sourcesContent":["// 声音管理类\r\nexport default class AudioManager {\r\n    private static _instance: AudioManager;\r\n\r\n    private currentBgMusic: number = -1;\r\n    // 背景音乐缓冲\r\n    private bgCache: Object = {};\r\n    // 音效缓存\r\n    private effectCache: Object = {};\r\n    // 音量\r\n    private volume: number = 1;\r\n    // 默认是开启音效的\r\n    private musicOn: boolean = true;\r\n\r\n    public static getInstance(): AudioManager {\r\n        if(!this._instance) {\r\n            this._instance = new AudioManager();\r\n        }\r\n        if(!cc.sys.localStorage.getItem(\"music\")) {\r\n            // 默认开启音效\r\n            cc.sys.localStorage.setItem(\"music\",1);\r\n        }\r\n        return this._instance;\r\n    }\r\n    \r\n    // 播放背景音乐\r\n    public async playBg(url: string,loop: boolean,volume?: number) {\r\n        \r\n        console.log(\"url is \",typeof url);\r\n        if(typeof url === \"string\") {\r\n            let that = this;\r\n            if(typeof volume === 'number') {\r\n                if(volume > 1) {\r\n                    volume = 1;\r\n                } else if(volume < 0) {\r\n                    volume = 0;\r\n                }\r\n            } else {\r\n                volume = this.volume;\r\n            }\r\n            console.log(\"bgCache is \",this.bgCache[url]);\r\n            if(!this.bgCache[url]) {\r\n                // console.log(\"raw(url) is \",cc.url.raw(url));\r\n                // 动态加载资源\r\n                let clip = await new Promise((resolve,reject) => {\r\n                    cc.loader.loadRes(url,(err,clip: cc.AudioClip) => {\r\n                        if(err) {\r\n                            console.log(\"err is \",err);\r\n                            reject(err);\r\n                            return;\r\n                        }\r\n                        resolve(clip);\r\n                    });\r\n                });\r\n                this.bgCache[url] = clip;\r\n                if(this.musicOn) {\r\n                    this.currentBgMusic = cc.audioEngine.play(this.bgCache[url],loop,volume);\r\n                }\r\n\r\n            } else {\r\n                if(this.musicOn) {\r\n                    this.currentBgMusic = cc.audioEngine.play(this.bgCache[url],loop,volume);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    public stopBg() {\r\n        // 暂停音乐\r\n        cc.audioEngine.pause(this.currentBgMusic);\r\n    }\r\n    public isPlaying(): boolean {\r\n        if(this.currentBgMusic !== -1 && this.musicOn) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    // 播放音效\r\n    public playEffect(url: string) {\r\n        if(!this.musicOn) {\r\n            return;\r\n        }\r\n        if(typeof url === \"string\") {\r\n            let self = this;\r\n            if(!this.effectCache[url]) {\r\n                cc.loader.loadRes(url,(err,clip: cc.AudioClip) => {\r\n                    if(err) {\r\n                        return;\r\n                    }\r\n                    self.effectCache[url] = clip;\r\n                });\r\n            }\r\n            cc.audioEngine.play(this.effectCache[url],false,this.volume);\r\n        }\r\n    }\r\n    // 开启音效(1为开启，0为关闭)\r\n    public turnOnMusic(): void {\r\n        if(this.currentBgMusic !== -1) {\r\n            cc.audioEngine.resume(this.currentBgMusic);\r\n        }\r\n        cc.sys.localStorage.setItem(\"music\",1);\r\n        this.musicOn = true;\r\n    }\r\n    // 关闭音效\r\n    public turnOffMusic(): void {\r\n        // 关闭音效\r\n        this.stopBg();\r\n        cc.sys.localStorage.setItem(\"music\",0);\r\n        this.musicOn = false;\r\n    }\r\n    // 获取音效状态（是开启还是关闭）\r\n    public getMusicState(): boolean {\r\n        let musicState: number = cc.sys.localStorage.getItem(\"music\");\r\n        return musicState == 1 ? true : false;\r\n    }\r\n    // 设置音效\r\n    public setVolume(volume: number): void {\r\n        if(volume > 1 || volume < 0) {\r\n            if(volume > 1) {\r\n                this.volume = 1;\r\n            } else {\r\n                this.volume = 0;\r\n            }\r\n        } else {\r\n            this.volume = volume;\r\n        }\r\n    }\r\n\r\n}\r\n"]}