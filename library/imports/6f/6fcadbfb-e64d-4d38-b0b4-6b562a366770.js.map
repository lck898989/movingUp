{"version":3,"sources":["../../../../../assets/Script/level/assets/Script/level/LevelItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEM,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAAuC,6BAAY;IADnD;QAAA,qEAmCC;QA/BG,gBAAU,GAAa,IAAI,CAAC;QAE5B,eAAS,GAAa,IAAI,CAAC;;IA6B/B,CAAC;IA3BG,yBAAK,GAAL;QACI,IAAI,OAAO,GAAe,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACrE,IAAI,UAAU,GAAiC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QACrG,IAAG,UAAU,EAAE;YACX,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC;SAC3C;IACL,CAAC;IACM,4BAAQ,GAAf;QACI,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;IAClC,CAAC;IACM,4BAAQ,GAAf,UAAgB,GAAkB;QAC9B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC5C,CAAC;IACM,2BAAO,GAAd;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;IACjC,CAAC;IACM,2BAAO,GAAd,UAAe,IAAmB;QAC9B,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC5C,CAAC;IACD,4BAAQ,GAAR,UAAS,CAAW,EAAC,IAAS;QAC1B,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC;QACxE,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IACD,0BAAM,GAAN,UAAQ,EAAE,IAAG,CAAC;IACd,6BAAS,GAAT;IAEA,CAAC;IA9BD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;iDACS;IAE5B;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;gDACQ;IALV,SAAS;QAD7B,OAAO;OACa,SAAS,CAkC7B;IAAD,gBAAC;CAlCD,AAkCC,CAlCsC,EAAE,CAAC,SAAS,GAkClD;kBAlCoB,SAAS","file":"","sourceRoot":"../../../../../assets/Script/level","sourcesContent":["import User from \"../users/User\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class LevelItem extends cc.Component {\n\n    @property(cc.Label)\n    levelLabel: cc.Label = null;\n    @property(cc.Label)\n    bestLabel: cc.Label = null;\n\n    start () {\n        let userCom: User = <User>cc.find(\"Controller\").getComponent(\"User\");\n        let bestRecord: {level: number,time: string} = userCom.getBestRecord(Number(this.levelLabel.string));\n        if(bestRecord) {\n            this.bestLabel.string = bestRecord.time;\n        }\n    }\n    public getLevel(): string {\n        return this.levelLabel.string;\n    }\n    public setLevel(str: string|number): void {\n        this.levelLabel.string = str.toString();\n    }\n    public getBest(): string {\n        return this.bestLabel.string;\n    }\n    public setBest(best: string|number): void {\n        this.bestLabel.string = best.toString();\n    }\n    btnEvent(e: cc.Event,data: any): void {\n        cc.director.emit(\"levelChoose\",{level: Number(this.levelLabel.string)});\n        cc.director.loadScene(\"Game\");\n    }\n    update (dt) {}\n    onDestroy(): void {\n\n    }\n}\n"]}