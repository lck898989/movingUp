{"version":3,"sources":["SceneManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["const {ccclass, property} = cc._decorator;\nimport {LayerState} from \"./consts/Consts\";\n// enum LayerState {\n    \n// };\n@ccclass\nexport default class SceneManager extends cc.Component{\n    // LIFE-CYCLE CALLBACKS:\n    private static _instance: SceneManager = null;\n    private level: number = 2;\n    private _root: cc.Node = null;\n    public static getInstance(): SceneManager {\n        if(!this._instance) {\n            this._instance = new SceneManager();\n        }\n        return this._instance;\n    }\n    \n    // 设置层\n    @property(cc.Node)\n    settingNode: cc.Node = null;\n    // 特效层\n    @property(cc.Node)\n    effecLayer: cc.Node = null;\n    // 数据加载中层\n    @property(cc.Node)\n    loadingLayer: cc.Node = null;\n    // 遮罩层\n    @property(cc.Node)\n    maskLayer: cc.Node = null;\n\n    private layerState: LayerState = LayerState.NONE;\n    \n\n\n    start(): void {\n        cc.director.on(\"levelChoose\",this.chooseLevel,this);\n        this.LS = LayerState.NONE;\n    }\n    set LS(state: LayerState) {\n        this.layerState = state;\n        switch(state) {\n            case LayerState.NONE:\n                this.node.active = false;\n                break;\n            case LayerState.EFFECT:\n                this.setLayerVisible([state]);\n                break;\n            case LayerState.SETTING:\n                this.setLayerVisible([state]);\n                this.settingNode.getComponent(cc.Animation).play(\"settingIn\");\n                break;\n            case LayerState.MASK:\n                this.setLayerVisible([state]);\n                break;\n            case LayerState.LOADING:\n                this.setLayerVisible([state]);\n                break;               \n\n        }\n    }\n    public setLayerVisible(index: number[]): void {\n        this.node.active = true;\n        let rootNodeLen: number = this.node.childrenCount;\n        let showNodeArr: cc.Node[] = [];\n        for(let i = 0; i < rootNodeLen; i++) {\n            for(let j = 0; j < index.length; j++)  {\n                if(index[j] - 1 === i) {\n                    showNodeArr.push(this.node.children[i]);\n                } else {\n                    this.node.children[i].active = false;\n                }\n            }\n        }\n        for(let i = 0; i < showNodeArr.length; i++) {\n            showNodeArr[i].active = true;\n        }\n    }\n    private chooseLevel(data: any): void {\n        console.log(\"选择关卡传递过来的数据data is \",data);\n        this.setLevel(data.level);\n    }\n    public setRoot(rootNode: cc.Node) {\n        this._root = rootNode;\n    }\n    public setLevel(level: number): void {\n        this.level = level;\n    }\n    public getLevel(): number {\n        return this.level;\n    }\n    public runScene(sceneNodePrefab: cc.Prefab): void {\n        if(this._root) {\n            if(this._root.childrenCount > 0) {\n                this._root.removeAllChildren();\n            }\n            // 添加新的场景\n            let sceneNode: cc.Node = cc.instantiate(sceneNodePrefab);\n            this._root.addChild(sceneNode);\n        }\n    }\n\n    \n}\n"]}